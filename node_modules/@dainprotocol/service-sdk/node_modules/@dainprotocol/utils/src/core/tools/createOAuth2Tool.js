"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createOAuth2Tool = createOAuth2Tool;
const tslib_1 = require("tslib");
const zod_1 = require("zod");
const DainResponse_1 = require("../../DainResponse");
const generateUI_1 = require("../../generateUI");
const createTool_1 = require("./createTool");
function createOAuth2Tool(provider, prefix, deps = { createTool: createTool_1.createTool }) {
    const { createTool } = deps;
    return createTool({
        id: `oauth2-${prefix ? `${prefix}-` : ''}${provider}`,
        name: `${provider} OAuth Login`,
        description: `Authenticate with ${provider}`,
        input: zod_1.z.object({}),
        output: zod_1.z.object({
            authUrl: zod_1.z.string(),
        }),
        pricing: {
            pricePerUse: 0,
            currency: 'USD',
        },
        handler: (_1, agentInfo_1, _a) => tslib_1.__awaiter(this, [_1, agentInfo_1, _a], void 0, function* (_, agentInfo, { app }) {
            if (!app.oauth2) {
                throw new Error('OAuth2 not configured for this service');
            }
            const authUrl = yield app.oauth2.generateAuthUrl(provider, agentInfo.id);
            return new DainResponse_1.DainResponse({
                text: `Please authenticate with ${provider} using this URL: ${authUrl}`,
                data: { authUrl },
                ui: new generateUI_1.OAuthUIBuilder()
                    .title(`${provider} Authentication`)
                    .content(`Please authenticate with ${provider} to continue`)
                    .url(authUrl)
                    .provider(provider)
                    .build(),
            });
        }),
    });
}
//# sourceMappingURL=createOAuth2Tool.js.map