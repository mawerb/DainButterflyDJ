"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionListUIBuilder = void 0;
const __1 = require("../../../..");
class ActionListUIBuilder extends __1.DSLBuilder {
    constructor(initialProps, renderMode = "inline") {
        super("actionList", initialProps, renderMode);
    }
    orientation(orientation) {
        return this.setProp("orientation", orientation);
    }
    label(label) {
        return this.setProp("label", label);
    }
    helperText(text) {
        return this.setProp("helperText", text);
    }
    /**
     * Adds a single action to the list.
     */
    addButton(params) {
        const { hint, tool, variant = "default", href, icon } = params;
        this.addAction({
            hint,
            type: "callTool",
            tool,
            key: "action-list-action",
            config: {
                hint,
                variant,
                href,
                icon,
            }
        });
        return this;
    }
    addButtons(buttonsOrItems, mapper) {
        if (mapper) {
            buttonsOrItems.forEach((item) => {
                const buttonParams = mapper(item);
                this.addButton(buttonParams);
            });
        }
        else {
            buttonsOrItems.forEach((buttonParams) => {
                this.addButton(buttonParams);
            });
        }
        return this;
    }
}
exports.ActionListUIBuilder = ActionListUIBuilder;
//# sourceMappingURL=actionsList.builder.js.map