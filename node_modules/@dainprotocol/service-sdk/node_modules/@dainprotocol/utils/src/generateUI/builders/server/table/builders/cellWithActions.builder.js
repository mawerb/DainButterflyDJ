"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cellWithActionsUIBuilder = void 0;
const __1 = require("../../../..");
/**
 * A DSL builder for creating a "cell with actions" UI element,
 * similar to how Gmail shows subject & snippet plus star/snooze icons.
 */
class cellWithActionsUIBuilder extends __1.DSLBuilder {
    constructor(initialProps, renderMode = "inline") {
        super("cellWithActions", initialProps, renderMode);
    }
    title(title) {
        return this.setProp("content", title);
    }
    leadingIcon(icon) {
        return this.setProp("leadingIcon", icon);
    }
    metaText(meta) {
        return this.setProp("metaText", meta);
    }
    addHoverAction(params) {
        const { hint, tool, type = "callTool", variant = "default", href, icon } = params;
        this.addAction({
            hint,
            type,
            tool,
            key: "hover-action",
            config: {
                hint,
                variant,
                href,
                icon,
            },
        });
        return this;
    }
    addHoverActions(actions) {
        actions.forEach((action) => this.addHoverAction(action));
        return this;
    }
}
exports.cellWithActionsUIBuilder = cellWithActionsUIBuilder;
//# sourceMappingURL=cellWithActions.builder.js.map